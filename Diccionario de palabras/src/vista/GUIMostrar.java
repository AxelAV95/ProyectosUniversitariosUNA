/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.datos.Datos;
import modelo.dominio.NodoPalabra;
import modelo.dominio.NodoPrincipal;
import static modelo.negocio.LogicaArbol.inorden;
import modelo.negocio.LogicaPalabras;

/**
 *
 * @author adeve
 */
public class GUIMostrar extends javax.swing.JFrame {

    /**
     * Creates new form GUIMostrar
     */
    public GUIMostrar() {

        initComponents();
        NodoPrincipal np = Datos.getListaPrincipal().getPrimero();
        while (np != null) {
            comboLetras.addItem(np.getLetra());
            np = np.getSiguiente();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboLetras = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaLetras = new javax.swing.JTextArea();
        botonMostrarLista = new javax.swing.JButton();
        botonOrden = new javax.swing.JButton();
        botonArchivar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mostrar letras");

        comboLetras.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar letra" }));
        comboLetras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLetrasActionPerformed(evt);
            }
        });

        jLabel1.setText("Letra raíz:");

        areaLetras.setColumns(20);
        areaLetras.setRows(5);
        jScrollPane1.setViewportView(areaLetras);

        botonMostrarLista.setText("Mostrar contenido lista");
        botonMostrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarListaActionPerformed(evt);
            }
        });

        botonOrden.setText("Recorrer inorden");
        botonOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenActionPerformed(evt);
            }
        });

        botonArchivar.setText("Archivar palabras");
        botonArchivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArchivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboLetras, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonMostrarLista)
                        .addGap(18, 18, 18)
                        .addComponent(botonOrden)
                        .addGap(18, 18, 18)
                        .addComponent(botonArchivar)))
                .addGap(0, 33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboLetras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(botonMostrarLista)
                    .addComponent(botonOrden)
                    .addComponent(botonArchivar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboLetrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLetrasActionPerformed
        // TODO add your handling code here:
        areaLetras.setText("");
        char c = (char) comboLetras.getSelectedItem();
        Controlador cont = new Controlador();
        
        
        //obtener el nodo con esa letra
        NodoPrincipal np = cont.obtenerLetraLista(Datos.getListaPrincipal(), c);

        areaLetras.append(cont.obtenerPalabrasArbol(np.getArbol().getRaiz(), c));

    }//GEN-LAST:event_comboLetrasActionPerformed

    private void botonOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenActionPerformed
        // TODO add your handling code here:
        areaLetras.setText("");
        String opcion = comboLetras.getSelectedItem().toString();
        Controlador c = new Controlador();
        NodoPrincipal np = c.obtenerLetraLista(Datos.getListaPrincipal(), opcion.charAt(0));
        c.inOrden(np.getArbol().getRaiz());
        areaLetras.append(inorden);
        inorden = "";

    }//GEN-LAST:event_botonOrdenActionPerformed

    private void botonMostrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarListaActionPerformed
        // TODO add your handling code here:
        //recorrer cada nodo de la lista principal
        areaLetras.setText("");
        NodoPrincipal np = Datos.getListaPrincipal().getPrimero();
        Controlador c = new Controlador();
         String aux = "";
        while(np!=null){
           
            aux+= np.getLetra()+" - ";
            
            aux+= c.obtenerPalabrasArbol(np.getArbol().getRaiz(),np.getLetra())+"\n";
            
            
            np=np.getSiguiente();
        }
        areaLetras.append(aux);
        //por cada nodo recorrer el arbol y mostrar su contenido
    }//GEN-LAST:event_botonMostrarListaActionPerformed

    private void botonArchivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArchivarActionPerformed
        // TODO add your handling code here:
        areaLetras.setText("");
        String aux = "";
        String aux2 = "";
        Controlador c = new Controlador();
        LogicaPalabras lp = new LogicaPalabras();
        NodoPrincipal primero = Datos.getListaPrincipal().getPrimero();
        
        while(primero != null){
            
            NodoPalabra primero2 = primero.getPalabras().getPrimero();
            aux+= "Letra: "+primero.getLetra()+"\n";
            while(primero2 != null){
                aux+="Palabras: "+primero2.getPalabra()+" Repeticiones: "+primero2.getContador()+"\n";
                
                primero2 = primero2.getSiguiente();
            }
            areaLetras.append(aux);
            
            primero = primero.getSiguiente();
            aux2 +=aux;
            aux = "";
        }
        
        try {
                c.archivarPalabras(aux2);
            } catch (IOException ex) {
                Logger.getLogger(GUIMostrar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            areaLetras.append("Archivado con éxito.");
        
    //    lp.imprimir(Datos.getListaPalabras());
      /*  try {
            if(c.archivarPalabras(Datos.getListaPalabras())){
                JOptionPane.showMessageDialog(null, "Se ha creado el archivo con éxito.");
            }
        } catch (IOException ex) {
            Logger.getLogger(GUIMostrar.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_botonArchivarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMostrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIMostrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaLetras;
    private javax.swing.JButton botonArchivar;
    private javax.swing.JButton botonMostrarLista;
    private javax.swing.JButton botonOrden;
    private javax.swing.JComboBox comboLetras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
