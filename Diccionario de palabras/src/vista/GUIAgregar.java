/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Controlador;
import modelo.datos.Datos;
import modelo.dominio.Arbol;
import modelo.dominio.NodoPrincipal;
import javax.swing.JOptionPane;
import modelo.dominio.Nodo;
import java.text.Normalizer;
import modelo.dominio.NodoPalabra;
import static modelo.negocio.LogicaArbol.resultado;
import static modelo.negocio.LogicaArbol.resultadoPalabraArbol;

/**
 *
 * @author adeve
 */
public class GUIAgregar extends javax.swing.JFrame {

    /**
     * Creates new form GUIAgregar
     */
    public GUIAgregar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public String quitarTildes(String src) {
        return Normalizer
                .normalize(src, Normalizer.Form.NFD)
                .replaceAll("[^\\p{ASCII}]", "");
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoPalabra = new javax.swing.JTextField();
        botonAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar");

        jLabel1.setText("Insertar palabra:");

        botonAgregar.setText("Insertar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(botonAgregar)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(botonAgregar)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        // TODO add your handling code here:
        String palabra = quitarTildes(campoPalabra.getText().toUpperCase().replaceAll("\\d", ""));
        Controlador c = new Controlador();
        //  c.agregarLetraLista(Datos.getListaPrincipal(), new NodoPrincipal('a'));
        //verificar si letra inicial existe en la lista principal
        if (c.verificarLetraPrincipal(Datos.getListaPrincipal(), palabra.charAt(0))) {
            //si existe
            NodoPrincipal np = c.obtenerLetraLista(Datos.getListaPrincipal(), palabra.charAt(0));
            //tomar el arbol de la letra
            Arbol a = np.getArbol();
            //Si existe en el arbol
            if (c.validarPalabra(a, palabra)) {

                //si la palabra existe en lista de palabras tomar contador y sumarle 1
                if (c.verificarPalabra(np.getPalabras(), palabra)) {
                    NodoPalabra npal = c.obtenerNodoPalabra(np.getPalabras(), palabra);
                    npal.setContador(npal.getContador() + 1);
                    JOptionPane.showMessageDialog(null, "Ya ha sido agregada");
                    //  c.agregarPalabra(Datos.getListaPalabras(), palabra);
                } else {
                   // JOptionPane.showMessageDialog(null, "Estoy saltando un paso");
                    c.agregarPalabra(np.getPalabras(), palabra);
                        //escribir palabra en el archivo
                    //palabra, apariciones: N
                }

                    //sino
                //agregar palabra
            } else {
                c.agregarPalabraArbol(a, palabra);
                c.agregarPalabra(np.getPalabras(), palabra);
                //agregar a lista de palabras
                JOptionPane.showMessageDialog(null, "Palabra agregada con éxito a la lista y al arbol");
            }
            resultado = "";
            resultadoPalabraArbol = false;

            this.dispose();
                        //agregarle una nueva palabra

        } else {
            //si no existe entonces
            System.out.print("No existe");
            //crear una letra nueva
            NodoPrincipal np = new NodoPrincipal(palabra.charAt(0));
            //crear arbol con raiz con esa letra
            np.setArbol(new Arbol(new Nodo(palabra.charAt(0))));

            if (c.agregarLetraLista(Datos.getListaPrincipal(), np)) {
                //agregar palabra al arbol
                c.agregarPalabraArbol(np.getArbol(), palabra);
                c.agregarPalabra(np.getPalabras(), palabra);

                JOptionPane.showMessageDialog(null, "Palabra agregada con éxito a la lista y al arbol");
            } else {
                JOptionPane.showMessageDialog(null, "Error al agregar.");
            }

            this.dispose();

        }


    }//GEN-LAST:event_botonAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIAgregar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIAgregar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JTextField campoPalabra;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
